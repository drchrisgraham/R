# the code illustrated are examples of R Coding
> x = 11
> x
[1] 11
> print(x)
[1] 11
> y <- 7
> y
[1] 7
> y = 9
> y
[1] 9
> rm(y)
> y = 9
> y
[1] 9
> x.1 = 14
> x.1
[1] 14
> x.1
[1] 14
> xx = "marin"
> xx
[1] "marin"
> yy = "1"
> yy
[1] "1"
> 11+14
[1] 25
> 7*9
[1] 63
> x+y
[1] 20
> z = x+y
> z
[1] 20
> x-y
[1] 2
> x*y
[1] 99
> x/y
[1] 1.222222
> y˄2
[1] 81
> x˄2 + y˄2
[1] 202
> sqrt(y)
[1] 3
> log(y)
[1] 2.197225
> exp(y)
[1] 8103.084
> log2(y)
[1] 3.169925
> abs(-14)
[1] 14
# the code below illustrates vectors and matrices
> x1 = c(1,3,5,7,9)
> x1
[1] 1 3 5 7 9
> gender = c("male","female")
> gender
[1] "male"   "female"
> 2:7
[1] 2 3 4 5 6 7
> seq(from=1, to=7, by=1)
[1] 1 2 3 4 5 6 7
> seq(from=1, to=7, by=1/3)
 [1] 1.000000 1.333333 1.666667 2.000000 2.333333 2.666667 3.000000 3.333333 3.666667 4.000000 4.333333 4.666667
[13] 5.000000 5.333333 5.666667 6.000000 6.333333 6.666667 7.000000
> seq(from=1, to=7, by=0.25)
 [1] 1.00 1.25 1.50 1.75 2.00 2.25 2.50 2.75 3.00 3.25 3.50 3.75 4.00 4.25 4.50 4.75 5.00 5.25 5.50 5.75 6.00 6.25 6.50
[24] 6.75 7.00
> rep(1, times=10)
 [1] 1 1 1 1 1 1 1 1 1 1
> rep("marin", times=5)
[1] "marin" "marin" "marin" "marin" "marin"
rep(1:3, times=5)
 [1] 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3
> rep(seq(from=2 , to=5, by=0.25), times=5)
 [1] 2.00 2.25 2.50 2.75 3.00 3.25 3.50 3.75 4.00 4.25 4.50 4.75 5.00 2.00 2.25 2.50 2.75 3.00 3.25 3.50 3.75 4.00 4.25
[24] 4.50 4.75 5.00 2.00 2.25 2.50 2.75 3.00 3.25 3.50 3.75 4.00 4.25 4.50 4.75 5.00 2.00 2.25 2.50 2.75 3.00 3.25 3.50
[47] 3.75 4.00 4.25 4.50 4.75 5.00 2.00 2.25 2.50 2.75 3.00 3.25 3.50 3.75 4.00 4.25 4.50 4.75 5.00
> rep(c("m", "f"), times=5)
 [1] "m" "f" "m" "f" "m" "f" "m" "f" "m" "f"
> x = 1:5
> x
[1] 1 2 3 4 5
> y = c(1,3,5,7,9)
> y
[1] 1 3 5 7 9
> x + 10
[1] 11 12 13 14 15
> x - 10
[1] -9 -8 -7 -6 -5
> x*10
[1] 10 20 30 40 50
> x/2
[1] 0.5 1.0 1.5 2.0 2.5
> x+y
[1]  2  5  8 11 14
> x-y
[1]  0 -1 -2 -3 -4
> x/y
[1] 1.0000000 0.6666667 0.6000000 0.5714286 0.5555556
> x*y
[1]  1  6 15 28 45
> y[3]
[1] 5
> y[-3]
[1] 1 3 7 9
> y[1:3]
[1] 1 3 5
> y[c(1,5)]
[1] 1 9
> y[-c(1,5)]
[1] 3 5 7
> y[y<6]
[1] 1 3 5
> matrix(c(1,2,3,4,5,6,7,8,9), nrow=3, byrow=TRUE)
     [,1] [,2] [,3]
[1,]    1    2    3
[2,]    4    5    6
[3,]    7    8    9
> matrix(c(1,2,3,4,5,6,7,8,9), nrow=3, byrow=FALSE)
     [,1] [,2] [,3]
[1,]    1    4    7
[2,]    2    5    8
[3,]    3    6    9
> mat = matrix(c(1,2,3,4,5,6,7,8,9), nrow=3, byrow=TRUE)
> mat [1, 2]
[1] 2
> mat[c(1,3),2]
[1] 2 8
> mat[2,]
[1] 4 5 6
> mat[,1]
[1] 1 4 7
> mat*10
     [,1] [,2] [,3]
[1,]   10   20   30
[2,]   40   50   60
[3,]   70   80   90
> View(LungCapDatadata1)
> dim(LungCapDatadata1)
[1] 725   6
> head(LungCapDatadata1)
  LungCap Age Height Smoke Gender Caesarean
1   6.475   6   62.1    no   male        no
2  10.125  18   74.7   yes female        no
3   9.550  16   69.7    no female       yes
4  11.125  14   71.0    no   male        no
5   4.800   5   56.9    no   male        no
6   6.225  11   58.7    no female        no
> tail(LungCapDatadata1)
    LungCap Age Height Smoke Gender Caesarean
720   7.325   9   66.3    no   male        no
721   5.725   9   56.0    no female        no
722   9.050  18   72.0   yes   male       yes
723   3.850  11   60.5   yes female        no
724   9.825  15   64.9    no female        no
725   7.100  10   67.7    no   male        no
> LungCapDatadata1[c(1,2,3),]
  LungCap Age Height Smoke Gender Caesarean
1   6.475   6   62.1    no   male        no
2  10.125  18   74.7   yes female        no
3   9.550  16   69.7    no female       yes
> LungCapDatadata1[5:9,]
  LungCap Age Height Smoke Gender Caesarean
5   4.800   5   56.9    no   male        no
6   6.225  11   58.7    no female        no
7   4.950   8   63.3    no   male       yes
8   7.325  11   70.4    no   male        no
9   8.875  15   70.5    no   male        no
LungCapDatadata1[-(5:9),]
> names(LungCapDatadata1)
[1] "LungCap"   "Age"       "Height"    "Smoke"     "Gender"    "Caesarean"
> mean(LungCapDatadata1$Age)
[1] 12.3269
> LungCapDatadata1$Age
> attach(LungCapDatadata1)
> mean(Age)
[1] 12.3269
> class(LungCap)
[1] "numeric"
> class(Age)
[1] "integer"
> levels(Smoke)
[1] "no"  "yes"
> summary(LungCapDatadata1)
    LungCap            Age            Height      Smoke        Gender    Caesarean
 Min.   : 0.507   Min.   : 3.00   Min.   :45.30   no :648   female:358   no :561  
 1st Qu.: 6.150   1st Qu.: 9.00   1st Qu.:59.90   yes: 77   male  :367   yes:164  
 Median : 8.000   Median :13.00   Median :65.40                                   
 Mean   : 7.863   Mean   :12.33   Mean   :64.84                                   
 3rd Qu.: 9.800   3rd Qu.:15.00   3rd Qu.:70.30                                   
 Max.   :14.675   Max.   :19.00   Max.   :81.80        
> x = c(0,1,1,1,0,0,0,0,0)
> class(x)
[1] "numeric"
> summary(x)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0000  0.0000  0.3333  1.0000  1.0000 
> x = as.factor(x)
> class(x)
[1] "factor"
> summary(x)
0 1 
6 3 
> mean(Age[Gender=="female"])
[1] 12.44972
> mean(Age[Gender=="male"])
[1] 12.20708

> MaleOver15 <- LungCapDatadata1[Gender=="male" & Age>15,]
> dim(MaleOver15)
[1] 89  6
> MaleOver15[1:6,]
   LungCap Age Height Smoke Gender Caesarean
11  11.500  19   76.4    no   male       yes
12  10.925  17   71.7    no   male        no
23  10.025  16   72.4    no   male        no
40  11.325  17   77.7    no   male        no
49  12.950  17   74.9    no   male        no
55  12.225  18   79.6    no   male        no
Age[1:5]
[1]  6 18 16 14  5
> temp = Age>15
> temp[1:5]
[1] FALSE  TRUE  TRUE FALSE FALSE
> temp2 <- as.numeric(Age>15)
> temp2[1:5]
[1] 0 1 1 0 0
> FemSmoke = Gender == "female" & Smoke == "yes"
> FemSmoke[1:5]
[1] FALSE  TRUE FALSE FALSE FALSE
> MoreData = cbind(LungCapDatadata1, FemSmoke)
> MoreData[1:5,]
  LungCap Age Height Smoke Gender Caesarean FemSmoke
1   6.475   6   62.1    no   male        no    FALSE
2  10.125  18   74.7   yes female        no     TRUE
3   9.550  16   69.7    no female       yes    FALSE
4  11.125  14   71.0    no   male        no    FALSE
5   4.800   5   56.9    no   male        no    FALSE
#Array#
apply(X=Stock_prices_for_SQL, MARGIN=2, FUN=mean)
#tApply for subsets, Returns a vector or array or list of values obtained 
by applying a function to margins of an array or matrix. #
#Mean age of smokers/ non smokers separately#
tapply(X=Age, INDEX=Smoke, FUN=mean)
      no      yes 
12.03549 14.77922
#Saved in an object called m#
m <- tapply(X=Age, INDEX=Smoke, FUN=mean)
tapply(X=Age, INDEX=Smoke, FUN=summary)
$no
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   3.00    9.00   12.00   12.04   15.00   19.00 
$yes
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  10.00   13.00   15.00   14.78   17.00   19.00
tapply(X=Age, INDEX=Smoke, FUN=quantile, probs=c(0.2,0.8))
$no
20% 80% 
  8  16 
$yes
20% 80% 
 12  17 
tapply(X=Age, INDEX=list(Smoke,Gender), FUN=mean)
      female     male
no  12.12739 11.94910
yes 14.75000 14.81818
# Pie charts Bar charts#
> attach(LungCapDatadata1)
> table(Gender)
Gender
female   male 
   358    367 
> count <- table(Gender)
> count
Gender
female   male 
   358    367 
> table(Gender)/725
Gender
   female      male 
0.4937931 0.5062069 
> percent <- table(Gender)/725
> percent
Gender
   female      male 
0.4937931 0.5062069 
> barplot(count)
> barplot(percent)
> barplot(percent, main="Title", xlab="Gender",ylab="%")
> barplot(percent, main="Title", xlab="Gender",ylab="%",las=1)
> barplot(percent, main="Title", xlab="Gender",ylab="%",las=1, names.arg=c("Female","Male"),horiz=TRUE)
> pie(count)
> pie(count, main="Title Here")
> box()
# Box Plots#
> help("boxplot")
> boxplot(LungCap)
> quantile(LungCap, probs=c(0,0.25,0.5,0.75,1))
    0%    25%    50%    75%   100% 
 0.507  6.150  8.000  9.800 14.675 
> boxplot(LungCap, main="Boxplot Lung Cap",ylab="Lung Capacity")
> boxplot(LungCap, main="Boxplot Lung Cap",ylab="Lung Capacity", ylim=c(0, 16))
> boxplot(LungCap, main="Boxplot Lung Cap",ylab="Lung Capacity", ylim=c(0, 16), las=1)
> boxplot(LungCap ~ Gender)
> boxplot(LungCap ~ Gender, main="Boxplot Lung Cap by Gender")
# Stratified box plots, smoking and lung capacity#
> AgeGroups <- cut(Age, breaks=c(0,13,15,17,25), labels=c("<13", "14/15", "16/17", "18+"))
> Age[1:5]
[1]  6 18 16 14  5
> AgeGroups[1:5]
[1] <13   18+   16/17 14/15 <13  
Levels: <13 14/15 16/17 18+
 [1] "<13"   "14/15" "16/17" "18+"  
> boxplot(LungCap, y="LungCapacity", main="Boxplot LungCap", las=1)
> boxplot(LungCap, y="LungCapacity", main="Boxplot LungCap vs Smoking", las=1)
> boxplot(LungCap~Smoke, y="LungCapacity", main="Boxplot LungCap vs Smoking", las=1)
> boxplot(LungCap[Age>=18]~Smoke[Age>=18],xlab="Smoke", ylab=LungCap)
> boxplot(LungCap[Age>=18]~Smoke[Age>=18],xlab="Smoke", ylab=LungCap, las=1)
> boxplot(LungCap~Smoke, y="LungCapacity", main="Boxplot LungCap vs Smoking", las=1)
> boxplot(LungCap[Age>=18]~Smoke[Age>=18],xlab="Smoke", ylab=LungCap)
> boxplot(LungCap~Smoke, y="LungCapacity", main="Boxplot LungCap vs Smoking", las=1)
> boxplot(LungCap[Age>=18]~Smoke[Age>=18],main="LungCap vs Smoke", ylab="LungCapacity for 18+", las=1)
> boxplot(LungCap[Age<13]~Smoke[Age<13],main="LungCap vs Smoke", ylab="LungCapacity for <13", las=1)
> boxplot(LungCap~Smoke*AgeGroups,main="LungCap vs Smoke", ylab="LungCapacity for AgeGroups", las=1)
> boxplot(LungCap~Smoke*AgeGroups,main="LungCap vs Smoke", ylab="LungCapacity for AgeGroups", las=2)
> boxplot(LungCap~Smoke*AgeGroups,main="LungCap vs Smoke", ylab="LungCapacity for AgeGroups", las=2, col=c(4,2))
# Histograms#
attach(LungCapDatadata1)
> ls(LungCapDatadata1)
[1] "Age"       "Caesarean" "Gender"    "Height"    "LungCap"   "Smoke" 
> hist(LungCap)
> hist(LungCap, freq=FALSE)
> hist(LungCap, prob=T)
> hist(LungCap, prob=T, ylim=c(0,0.2),breaks=7)
> hist(LungCap, prob=T, ylim=c(0,0.2),breaks=14)
> hist(LungCap, prob=T, ylim=c(0,0.2),breaks=seq(from=0,to=16,by=2))
> hist(LungCap, prob=T, ylim=c(0,0.2),breaks=seq(from=0,to=16,by=2), main= "Boxplot of Lung Capacity", xlab="Lung Capacity",las=1)
> lines(density(LungCap))
> lines(density(LungCap), col=2,lwd=3)
#Stem and leaf models#
> attach(LungCapDatadata1)
> femaleLungCap <- LungCap[Gender=="female"]
> stem(femaleLungCap)
> stem(femaleLungCap,scale=2)
#Stacked and Grouped Bar Charts and Mosaic Plots#
attach(LungCapDatadata1)
> ls(LungCapDatadata1)
[1] "Age"       "Caesarean" "Gender"    "Height"    "LungCap"   "Smoke"    
> help("barplot")
> table(Smoke, Gender)
     Gender
Smoke female male
  no     314  334
  yes     44   33
> table1 <- table(Smoke, Gender)
> table1
     Gender
Smoke female male
  no     314  334
  yes     44   33
> barplot(table1)
> barplot(table1,beside=T)
barplot(table1, beside=T)
barplot(table1, beside=T,legend.text = c("Non-Smoker","Smoker"),main="Gender vs Smoking", xlab="Gender", las=1, col=c(2,4))
#Mosaic Plots#
mosaicplot(table1)
#Scatter Plots#
> attach(LungCapDatadata1)
> ls(LungCapDatadata1)
[1] "Age"       "Caesarean" "Gender"    "Height"    "LungCap"   "Smoke"    
> ?plot
> cor(Age,Height)
[1] 0.8357368
> plot(Age,Height, main="Scatter Plot Age vs Height",xlab="Age",ylab="Height",las=1)
> plot(Age,Height, main="Scatter Plot Age vs Height",xlab="Age",ylab="Height",las=1,xlim=c(0,25),cex=0.5)
> plot(Age,Height, main="Scatter Plot Age vs Height",xlab="Age",ylab="Height",las=1,xlim=c(0,25),pch=8)
> plot(Age,Height, main="Scatter Plot Age vs Height",xlab="Age",ylab="Height",las=1,xlim=c(0,25),pch=8, col=2)
> abline(lm(Height~Age),col=4)
> lines(smooth.spline(Age,Height))
> lines(smooth.spline(Age,Height),lty=2,lwd=5)
#Calculating Mean, Standard Deviation, Frequencies #
attach(LungCapDatadata1)
> ls(LungCapDatadata1)
[1] "Age"       "Caesarean" "Gender"    "Height"    "LungCap"   "Smoke"    
> summary(LungCapDatadata1)
    LungCap            Age            Height      Smoke        Gender    Caesarean
 Min.   : 0.507   Min.   : 3.00   Min.   :45.30   no :648   female:358   no :561  
 1st Qu.: 6.150   1st Qu.: 9.00   1st Qu.:59.90   yes: 77   male  :367   yes:164  
 Median : 8.000   Median :13.00   Median :65.40                                   
 Mean   : 7.863   Mean   :12.33   Mean   :64.84                                   
 3rd Qu.: 9.800   3rd Qu.:15.00   3rd Qu.:70.30                                   
 Max.   :14.675   Max.   :19.00   Max.   :81.80                                   
> table(Smoke)
Smoke
 no yes 
648  77 
> table(Smoke)/725
Smoke
       no       yes 
0.8937931 0.1062069 
> length(Smoke)
[1] 725
> table(Smoke)/length(Smoke)
Smoke
       no       yes 
0.8937931 0.1062069 
> table(Smoke,Gender)
     Gender
Smoke female male
  no     314  334
  yes     44   33
> mean(LungCap)
[1] 7.863148
> mean(LungCap,trim=0.1)
[1] 7.938081
> median(LungCap)
[1] 8
> var(LungCap)
[1] 7.086288
> sd(LungCap)
[1] 2.662008
> sqrt(var(LungCap))
[1] 2.662008
> min(LungCap)
[1] 0.507
> max(LungCap)
[1] 14.675
> range(LungCap)
[1]  0.507 14.675
> quantile(LungCap,probs=0.9)
   90% 
11.205 
> quantile(LungCap,probs=c(0.2,0.5,0.9,1))
   20%    50%    90%   100% 
 5.645  8.000 11.205 14.675 
> cor(LungCap,Age)
[1] 0.8196749
> cor(LungCap,Age, method="spearman")
[1] 0.8172464
> cov(LungCap,Age)
[1] 8.738289
> var(LungCap,Age)
[1] 8.738289

#How to Modify and Customize Plots in R#
help(par)
plot(Age,Height,main="Scatterplot")
plot(Age,Height,main="Scatterplot",cex=0.5,cex.main=2,cex.lab=1.5,cex.axis=0.7)
plot(Age,Height,main="Scatterplot",font.main=3)
plot(Age,Height,main="Scatterplot",font.main=4)
plot(Age,Height,main="Scatterplot",font.main=4, font.lab=2)
plot(Age,Height,main="Scatterplot",font.main=4, font.lab=2,font.axis=3)
#You really don’t want to use so many colours#
plot(Age,Height,main="Scatterplot",col=5,col.main=4,col.lab=2,col.axis=3)
abline(lm(Height~Age),col=4, lty=2,lwd=6)
#Identifying gender on the same plot#
Plot(Age[Gender==”male”], Height[Gender==”male”],col=4,pch=”M”,xlab=”Age”,ylab=”Height”,main=”Height vs Age”)
plot(Age[Gender=="male"],Height[Gender=="male"], col=4,pch="m",xlab="Age",ylab="Height")
points(Age[Gender=="female"],Height[Gender=="female"],col=3,pch="f")

#Split plotting screen#
par(mfrow=c(1,2))
> points(Age[Gender=="male"],Height[Gender=="male"],col=4,pch="m",xlab="Age",ylab="Height",main="Height vs Age")
> points(Age[Gender=="male"],Height[Gender=="male"],xlab="Age",ylab="Height",main="Height vs Age for Males")
> points(Age[Gender=="female"],Height[Gender=="female"],xlab="Age",ylab="Height",main="Height vs Age for Females")
par(mfrow=c(1,2))
plot(Age[Gender=="male"],Height[Gender=="male"],xlab="Age",ylab="Height",main="Height vs Age for Males",xlim=c(0,20),ylim=c(45,85))
plot(Age[Gender=="female"],Height[Gender=="female"],xlab="Age",ylab="Height",main="Height vs Age for Feales",xlim=c(0,20),ylim=c(45,85))
par(mfrow=c(1,1))
plot(Age,Height,main="TITLE",axes=f)
axis(side=1, at=c(7,12.3,15), labels=c("sev","mean","15"))
axis(side=2, at=c(55,65,75), labels=c(55,65,75))
box()
> axis(side=4,at=c(50,60,70),labels=c(50,60,70) )

#Add text to a plot#
plot(Age,LungCap, main="Scatterplot of LungCap vs Age", las=1)
> cor(Age,LungCap)
[1] 0.8196749
> text(x=5,y=11,label="r=0.82")
> text(x=3.5,y=13,adj=0,lab="r=0.82", cex=0.5, col=4,font=4)
> abline(h=mean(LungCap), col=2)
> abline(h=mean(LungCap), col=2,lwd=2)
> text(x=2.5,y=8.5,adj=0,lab="Mean Cap Data", cex=0.65, col=2)
> mtext(text="r=0.82",side=2)
> mtext(text="r=0.82",side=1)
> mtext(text="r=0.82",side=0)

#Add and customize legends#
attach(LungCapDatadata1)
> ls(LungCapDatadata1)
[1] "Age"       "Caesarean" "Gender"    "Height"    "LungCap"   "Smoke"    
> plot(Age[Smoke=="no"],LungCap[Smoke=="no"],main="LungCap vs Age for Smoke/Non Smoke, col=4")
> plot(Age[Smoke=="no"],LungCap[Smoke=="no"],main="LungCap vs Age for Smoke/Non Smoke, col=4",xlab="Age",ylab="Lung Capacity")
> points(Age[Smoke=="yes"],LungCap[Smoke=="yes"],col=2)
> legend(x=3.5,y=14, legend=c("Smoke","Non Smoke"),fill=c(4,2))
> plot(Age[Smoke=="no"],LungCap[Smoke=="no"],main="LungCap vs Age for Smoke/Non Smoke, col=4",xlab="Age",ylab="Lung Capacity")
> plot(Age[Smoke=="no"],LungCap[Smoke=="no"],main="LungCap vs Age for Smoke/Non Smoke, col=4",xlab="Age",ylab="Lung Capacity",pch=16)
> points(Age[Smoke=="yes"],LungCap[Smoke=="yes"],col=2,pch=17)
> legend(x=3.5,y=14, legend=c("Smoke","Non Smoke"),col=c(4,2),pch=c(16,17))
> plot(Age[Smoke=="no"],LungCap[Smoke=="no"],main="LungCap vs Age for Smoke/Non Smoke, col=4",xlab="Age",ylab="Lung Capacity",pch=16)
> plot(Age[Smoke=="no"],LungCap[Smoke=="no"],main="LungCap vs Age for Smoke/Non Smoke, col=4",xlab="Age",ylab="Lung Capacity",pch=16)
> points(Age[Smoke=="yes"],LungCap[Smoke=="yes"],col=2,pch=17)
> legend(x=3.5,y=14, legend=c("Smoke","Non Smoke"),col=c(4,2),pch=c(16,17),bty="n")
> lines(smooth.spline(Age[Smoke=="no"],LungCap[Smoke=="no"]),col=4)
> lines(smooth.spline(Age[Smoke=="no"],LungCap[Smoke=="no"]),col=4,lwd=3)
> lines(smooth.spline(Age[Smoke=="yes"],LungCap[Smoke=="yes"]),col=2,lwd=3)

#Binomial distributions#
> # P(X=3)
> dbinom(x=3,siz=20, p=1/6)
[1] 0.2378866
> # P(X=0) & # P(X=1) & .... & # P(X=3)
> dbinom(x=0:3,siz=20, p=1/6)
[1] 0.02608405 0.10433621 0.19823881 0.23788657
> # P(X<=3)
> sum( dbinom(x=0:3,siz=20, p=1/6))
[1] 0.5665456
> # P(X<=3)
> pbinom(q=3,size=20,prob=1/6, lower.tail=T)
[1] 0.5665456

#Poisson Distribution in R#
#Know rate of lambda = 7 #
#dpois used to find probability density of function x #
#p that X = exactly 4#
 > dpois(x=4,lambda=7)
[1] 0.09122619
#p that X = 0 & 1, 2, 3 & exactly 4#
> dpois(x=0:4,lambda=7)
[1] 0.000911882 0.006383174 0.022341108 0.052129252 0.091226192
#p that X < 4#
sum(dpois(x=0:4,lambda=7))
[1] 0.1729916
> ppois(q=4,lambda=7,lower.tail=t)
[1] 0.1729916
#p that X > 4#
> ppois(q=4,lambda=7,lower.tail=f)
[1] 0.8270084

#random sample can be found using rpois#

#normal distribution, zscores, using X which is normally distributed and a mean 
of 75and a STD Dev of 5#
#calculate probability of X is less than 70#
pnorm(q=70,mean=75,sd=5,lower.tail=T)
[1] 0.1586553
pnorm(q=85,mean=75,sd=5,lower.tail=f)
[1] 0.02275013
#Z is > than 1, area above a z-score#
pnorm(q=1,mean=0,sd=1,lower.tail=f)
[1] 0.1586553

# plot the probability density function#
x<-seq(from=55,to=95, by=0.25)
x
dens <- dnorm(x, mean=75, sd=5)
plot(x,dens)
plot(x,dens, type="l")
# add a line at vertical of 75#
abline(v=75)
#draw a random sample from a normal population#
rand <- rnorm(n=40,mean=75,sd=5)
rand
hist(rand)

#t tests mean=0 sd=1, test stat=2.3, df=25, one sides p value the prob of t being greater than 2.3.  #
pt(q=2.3, df=25,lower.tail=f)
[1] 0.01503675
# 2 sides p value#
> pt(q=2.3, df=25,lower.tail=f)+ pt(q=-2.3,df=25, lower.tail=t)
[1] 0.03007351
# confidence intervals, 2 sides 95% Confidence interval#
> qt(p=0.025,df=25,lower.tail=t)
[1] -2.059539

#One-Sample t Test & Confidence Interval, one sided, 95% confidence#
> boxplot(LungCap)
> t.test(LungCap, mu=8, alternative="less", conf.level=0.95)
#One-Sample t Test & Confidence Interval, two sided, 95% confidence#
> t.test(LungCap, mu=8, alternative="two.sided", conf.level=0.95)

# 2 sample t test difference in means between 2 populations, hypothesis of Lungcap of smokers equals non smokers#
> boxplot(LungCap~Smoke)
> t.test(LungCap~Smoke,mu=0,alt="two.sided", conf=0.95, var.eq=F,paired=F)

# Mann Whitney U / Wilcoxon Rank-Sum Test(the nonparametric alternative to the two- sample t- test examingthe difference between 2 medians  for independent populations)#
# Null hypothesis the median value of the lung capacity of smokes equals non smokers#
wilcox.test(LungCap~Smoke, mu=0,alt="two.sided",conf.int=T,conf.level=0.95,paired=F,exact=T,correct=T)

# linear regression, lung capacity y variable#
plot(Age, LungCap,main="Scatterplot")
> cor(Age,LungCap)
[1] 0.8196749
> mod <- lm(LungCap~Age) 
> summary(mod)
> attributes(mod)
> mod$coefficients
(Intercept)         Age 
  1.1468578   0.5448484 
> coef(mod)
(Intercept)         Age 
  1.1468578   0.5448484 
> plot(Age, LungCap,main="Scatterplot")
> abline(mod)
> abline(mod,col=2, lwd=3)
confint(mod)
> confint(mod,level=0.99)
> summary(mod)
> anova(mod)
